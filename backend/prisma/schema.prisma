// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  firstName    String?   @map("first_name")
  lastName     String?   @map("last_name")
  email        String    @unique
  organization String?
  phoneNumber  String?   @map("phone_number")
  address      String?
  avatarUrl    String?   @map("avatar_url")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  @@map("users")
}

model Order {
  id            String      @id @default(cuid())
  externalId    String      @unique @map("external_id") // ID из внешнего API
  customerName  String?     @map("customer_name")
  customerEmail String?     @map("customer_email")
  customerPhone String?     @map("customer_phone")
  customerCity  String?     @map("customer_city")
  customerAddress String?   @map("customer_address")
  status        String
  total         Decimal     @db.Decimal(10, 2)
  currency      String      @default("RUB")
  bankCard      String?     @map("bank_card")
  bonus         Decimal?    @db.Decimal(10, 2) @default(0)
  deliveryCost  Decimal?    @db.Decimal(10, 2) @default(0) @map("delivery_cost")
  paidAt        DateTime?   @map("paid_at")
  shippedAt     DateTime?   @map("shipped_at")
  orderDate     DateTime    @map("order_date")
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")

  // Связь с элементами заказа
  items         OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        String   @id @default(cuid())
  orderId   String   @map("order_id")
  productId String?  @map("product_id")
  name      String
  quantity  Int
  price     Decimal  @db.Decimal(10, 2)
  total     Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Связь с заказом
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("order_items")
}

enum TrendType {
  GROWING
  FALLING
  STABLE
}

model Product {
  id           Int      @id @default(autoincrement())
  externalId   Int?     @unique @map("external_id") // ID из внешнего API
  name         String
  description  String?
  price        Decimal  @db.Decimal(10, 2) // цена продажи в лирах
  costPrice    Decimal? @db.Decimal(10, 2) @map("cost_price") // себестоимость в лирах
  stockQuantity Int     @default(0) @map("stock_quantity")
  brand        String?
  category     String?
  mainIngredient String? @map("main_ingredient")
  dosageForm   String?  @map("dosage_form")
  packageQuantity Int?  @map("package_quantity")
  weight       String?

  // Analytics fields
  avgDailySales30d  Decimal? @db.Decimal(8, 2) @default(0) @map("avg_daily_sales_30d")
  daysToZero        Int?     @default(0) @map("days_to_zero")
  lastPurchaseDate  DateTime? @map("last_purchase_date")
  recommendedQty    Int?     @default(0) @map("recommended_qty")
  trend             TrendType? @default(STABLE)
  inTransit         Int      @default(0) @map("in_transit")
  deliveryDays      Int      @default(14) @map("delivery_days")
  minStock          Int      @default(5) @map("min_stock")
  isHidden          Boolean  @default(false) @map("is_hidden")

  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Связь с трендами
  trends       ProductTrend[]

  @@map("products")
}

model ProductTrend {
  id          String    @id @default(cuid())
  productId   Int       @map("product_id")
  date        DateTime  @default(now())
  salesQty    Int       @default(0) @map("sales_qty")
  stockLevel  Int       @default(0) @map("stock_level")
  avgPrice    Decimal?  @db.Decimal(10, 2) @map("avg_price")
  createdAt   DateTime  @default(now()) @map("created_at")

  // Связь с продуктом
  product     Product   @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_trends")
  @@unique([productId, date])
}
