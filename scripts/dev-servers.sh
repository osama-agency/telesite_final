#!/bin/bash

# üöÄ Development Server Manager
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞–º–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è Telesite

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –≠–º–æ–¥–∑–∏
FIRE="üî•"
CHECK="‚úÖ"
CROSS="‚ùå"
ROCKET="üöÄ"
STOP="‚èπÔ∏è"
INFO="‚ÑπÔ∏è"

# –ü–æ—Ä—Ç—ã
FRONTEND_PORT=3001
BACKEND_PORT=3011

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
check_process() {
    local port=$1
    local name=$2

    if lsof -i:$port -t >/dev/null 2>&1; then
        local pid=$(lsof -i:$port -t)
        echo -e "${GREEN}‚úÖ $name${NC} —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É $port (PID: $pid)"
        return 0
    else
        echo -e "${RED}‚ùå $name${NC} –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É $port"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–±–∏–π—Å—Ç–≤–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
kill_process() {
    local port=$1
    local name=$2

    if lsof -i:$port -t >/dev/null 2>&1; then
        log "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $name –Ω–∞ –ø–æ—Ä—Ç—É $port..."
        lsof -i:$port -t | xargs kill -9 2>/dev/null || true
        sleep 2

        if lsof -i:$port -t >/dev/null 2>&1; then
            error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $name"
            return 1
        else
            success "$name –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            return 0
        fi
    else
        warning "$name —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–±–∏–π—Å—Ç–≤–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ –ø–æ—Ä—Ç–∞–º
kill_processes() {
    echo -e "${YELLOW}${STOP} –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç–∞—Ö ${FRONTEND_PORT} –∏ ${BACKEND_PORT}...${NC}"

    # –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –ø–æ—Ä—Ç—É
    if lsof -ti:${FRONTEND_PORT} >/dev/null 2>&1; then
        echo -e "${INFO} –ù–∞–π–¥–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞ –ø–æ—Ä—Ç—É ${FRONTEND_PORT}"
        kill -9 $(lsof -ti:${FRONTEND_PORT}) 2>/dev/null || true
    fi

    # –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –±—ç–∫–µ–Ω–¥ –ø–æ—Ä—Ç—É
    if lsof -ti:${BACKEND_PORT} >/dev/null 2>&1; then
        echo -e "${INFO} –ù–∞–π–¥–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞ –ø–æ—Ä—Ç—É ${BACKEND_PORT}"
        kill -9 $(lsof -ti:${BACKEND_PORT}) 2>/dev/null || true
    fi

    # –£–±–∏–≤–∞–µ–º –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    pkill -f "next dev" || true
    pkill -f "ts-node-dev.*server.ts" || true
    pkill -f "node.*3011" || true

    echo -e "${CHECK} –ü—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    sleep 2
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤
check_ports() {
    echo -e "${INFO} –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–æ–≤..."

    if lsof -ti:${FRONTEND_PORT} >/dev/null 2>&1; then
        echo -e "${CROSS} –ü–æ—Ä—Ç ${FRONTEND_PORT} –∑–∞–Ω—è—Ç"
        return 1
    fi

    if lsof -ti:${BACKEND_PORT} >/dev/null 2>&1; then
        echo -e "${CROSS} –ü–æ—Ä—Ç ${BACKEND_PORT} –∑–∞–Ω—è—Ç"
        return 1
    fi

    echo -e "${CHECK} –ü–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–æ–≤
health_check() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–æ–≤..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞
    if curl -s http://localhost:$BACKEND_PORT/health >/dev/null 2>&1; then
        success "üè• Backend API –∑–¥–æ—Ä–æ–≤"
    else
        warning "üè• Backend API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    if curl -s -I http://localhost:$FRONTEND_PORT >/dev/null 2>&1; then
        success "üåê Frontend –∑–¥–æ—Ä–æ–≤"
    else
        warning "üåê Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤
start_servers() {
    echo -e "${ROCKET} –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."

    # –£–±–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    kill_processes

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã
    if ! check_ports; then
        echo -e "${CROSS} –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –ø–æ—Ä—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        exit 1
    fi

    # –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞
    echo -e "${BLUE}${ROCKET} –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É ${BACKEND_PORT}...${NC}"
    cd backend
    nohup ./node_modules/.bin/ts-node-dev --respawn --transpile-only src/server.ts > ../logs/backend.log 2>&1 &
    BACKEND_PID=$!
    cd ..

    # –î–∞–µ–º –≤—Ä–µ–º—è backend —Å–µ—Ä–≤–µ—Ä—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    sleep 3

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ backend –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
    if ! curl -s http://localhost:${BACKEND_PORT}/health > /dev/null; then
        echo -e "${CROSS} Backend —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
        exit 1
    fi

    echo -e "${CHECK} Backend —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (PID: $BACKEND_PID)"

    # –ó–∞–ø—É—Å–∫ frontend —Å–µ—Ä–≤–µ—Ä–∞
    echo -e "${GREEN}${ROCKET} –ó–∞–ø—É—Å–∫ frontend —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É ${FRONTEND_PORT}...${NC}"
    nohup ./node_modules/.bin/next dev --turbopack --port ${FRONTEND_PORT} > logs/frontend.log 2>&1 &
    FRONTEND_PID=$!

    # –î–∞–µ–º –≤—Ä–µ–º—è frontend —Å–µ—Ä–≤–µ—Ä—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    sleep 5

    echo -e "${CHECK} Frontend —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (PID: $FRONTEND_PID)"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    check_status
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    echo -e "${INFO} –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤:"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ backend
    if curl -s http://localhost:${BACKEND_PORT}/health > /dev/null; then
        echo -e "${CHECK} Backend (–ø–æ—Ä—Ç ${BACKEND_PORT}): ${GREEN}–†–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "${CROSS} Backend (–ø–æ—Ä—Ç ${BACKEND_PORT}): ${RED}–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend
    if lsof -ti:${FRONTEND_PORT} >/dev/null 2>&1; then
        echo -e "${CHECK} Frontend (–ø–æ—Ä—Ç ${FRONTEND_PORT}): ${GREEN}–†–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "${CROSS} Frontend (–ø–æ—Ä—Ç ${FRONTEND_PORT}): ${RED}–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    fi

    echo ""
    echo -e "${INFO} –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
    echo -e "  Frontend: ${BLUE}http://localhost:${FRONTEND_PORT}${NC}"
    echo -e "  Backend API: ${BLUE}http://localhost:${BACKEND_PORT}/api${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤
stop_servers() {
    echo -e "${STOP} –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤..."
    kill_processes
    echo -e "${CHECK} –°–µ—Ä–≤–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
restart_servers() {
    echo -e "${FIRE} –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤..."
    stop_servers
    sleep 2
    start_servers
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤
show_logs() {
    echo -e "${INFO} –õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤:"
    echo -e "${BLUE}=== BACKEND LOGS ===${NC}"
    tail -n 20 logs/backend.log 2>/dev/null || echo "–ù–µ—Ç –ª–æ–≥–æ–≤ backend"
    echo ""
    echo -e "${GREEN}=== FRONTEND LOGS ===${NC}"
    tail -n 20 logs/frontend.log 2>/dev/null || echo "–ù–µ—Ç –ª–æ–≥–æ–≤ frontend"
}

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p logs

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-start}" in
    "start")
        start_servers
        ;;
    "stop")
        stop_servers
        ;;
    "restart")
        restart_servers
        ;;
    "status")
        check_status
        ;;
    "logs")
        show_logs
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status|logs}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  start   - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  stop    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä—ã"
        echo "  restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä—ã"
        echo "  status  - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–æ–≤"
        echo "  logs    - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤"
        exit 1
        ;;
esac
